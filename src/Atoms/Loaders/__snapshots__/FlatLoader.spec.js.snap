// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FlatLoader should render correctly 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 50px;
  height: 30px;
  text-align: center;
  font-size: 10px;
}

.c1 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.c2 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -1s;
  animation-delay: -1s;
}

.c3 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.c4 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

.c5 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.7s;
  animation-delay: -0.7s;
}

<FlatLoader
  height="30px"
  width="50px"
>
  <styled.div
    height="30px"
    width="50px"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  justify-content: space-around;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  text-align: center;
  font-size: 10px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="30px"
      width="50px"
    >
      <div
        className="c0"
        height="30px"
        width="50px"
      >
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -1.1s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -1s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.9s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "c4",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.8s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.7s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c5"
            />
          </StyledComponent>
        </Styled(styled.div)>
      </div>
    </StyledComponent>
  </styled.div>
</FlatLoader>
`;

exports[`FlatLoader should render correctly with height 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 50px;
  height: 100px;
  text-align: center;
  font-size: 10px;
}

.c1 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.c2 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -1s;
  animation-delay: -1s;
}

.c3 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.c4 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

.c5 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.7s;
  animation-delay: -0.7s;
}

<FlatLoader
  height="100px"
  width="50px"
>
  <styled.div
    height="100px"
    width="50px"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  justify-content: space-around;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  text-align: center;
  font-size: 10px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="100px"
      width="50px"
    >
      <div
        className="c0"
        height="100px"
        width="50px"
      >
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -1.1s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -1s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.9s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "c4",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.8s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.7s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c5"
            />
          </StyledComponent>
        </Styled(styled.div)>
      </div>
    </StyledComponent>
  </styled.div>
</FlatLoader>
`;

exports[`FlatLoader should render correctly with width 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 100px;
  height: 30px;
  text-align: center;
  font-size: 10px;
}

.c1 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.c2 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -1s;
  animation-delay: -1s;
}

.c3 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.c4 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

.c5 {
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: #10ADE4;
  -webkit-animation: TaWdn 1.2s infinite ease-in-out;
  animation: TaWdn 1.2s infinite ease-in-out;
  -webkit-animation-delay: -0.7s;
  animation-delay: -0.7s;
}

<FlatLoader
  height="30px"
  width="100px"
>
  <styled.div
    height="30px"
    width="100px"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  justify-content: space-around;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  text-align: center;
  font-size: 10px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="30px"
      width="100px"
    >
      <div
        className="c0"
        height="30px"
        width="100px"
      >
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -1.1s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -1s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.9s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "c4",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.8s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
            />
          </StyledComponent>
        </Styled(styled.div)>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  display: inline-block;
  width: 15%;
  height: 100%;
  background-color: ",
                    [Function],
                    ";
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-TaWdn",
                      "inject": [Function],
                      "name": "TaWdn",
                      "rules": Array [
                        "@-webkit-keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                        "@keyframes TaWdn{0%,40%,100%{opacity:1;}20%{opacity:0;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.2s infinite ease-in-out;
",
                    "
  animation-delay: -0.7s;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bwzfXH",
                ],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c5"
            />
          </StyledComponent>
        </Styled(styled.div)>
      </div>
    </StyledComponent>
  </styled.div>
</FlatLoader>
`;
