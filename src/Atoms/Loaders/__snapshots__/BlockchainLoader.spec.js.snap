// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BlockchainLoader should render correctly 1`] = `
.c0 {
  position: relative;
  width: 150px;
  height: 150px;
}

.c1 {
  width: 70%;
  height: 70%;
  -webkit-transform-origin: 85% 35%;
  -ms-transform-origin: 85% 35%;
  transform-origin: 85% 35%;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  border-radius: 10%;
  overflow: hidden;
}

.c2 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
}

.c3 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.c4 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.c5 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c6 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c7 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.c8 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.c9 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c10 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c11 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c12 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.c13 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c14 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c15 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c16 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.6s;
  animation-delay: 0.6s;
}

.c17 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c18 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c19 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c20 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.6s;
  animation-delay: 0.6s;
}

.c21 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.7s;
  animation-delay: 0.7s;
}

.c22 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c23 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c24 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.6s;
  animation-delay: 0.6s;
}

.c25 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #b2d5e5;
  -webkit-animation-delay: 0.7s;
  animation-delay: 0.7s;
}

.c26 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #b2d5e5;
  -webkit-animation-delay: 0.8s;
  animation-delay: 0.8s;
}

<BlockchainLoader
  size="150px"
>
  <styled.div
    size="150px"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  position: relative;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="150px"
    >
      <div
        className="c0"
        size="150px"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  width: 70%;
  height: 70%;
  transform-origin: 85% 35%;
  transform: rotate(-45deg);
  border-radius: 10%;
  overflow: hidden;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c2"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": true,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.1s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c3"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iwsKbI",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.2s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-iwsKbI",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c4"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gZMcBi",
                        "isStatic": true,
                        "lastClassName": "c5",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-gZMcBi",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c5"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gqjmRU",
                        "isStatic": true,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-gqjmRU",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-VigVT",
                        "isStatic": true,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.1s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-VigVT",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c7"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": true,
                        "lastClassName": "c8",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.2s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c8"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjdhpX",
                        "isStatic": true,
                        "lastClassName": "c9",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fjdhpX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c9"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzJRlG",
                        "isStatic": true,
                        "lastClassName": "c10",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jzJRlG",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c10"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-cSHVUG",
                        "isStatic": true,
                        "lastClassName": "c11",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-cSHVUG",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c11"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kAzzGY",
                        "isStatic": true,
                        "lastClassName": "c12",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.2s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kAzzGY",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c12"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-chPdSV",
                        "isStatic": true,
                        "lastClassName": "c13",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-chPdSV",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c13"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kgoBCf",
                        "isStatic": true,
                        "lastClassName": "c14",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kgoBCf",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c14"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kGXeez",
                        "isStatic": true,
                        "lastClassName": "c15",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kGXeez",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c15"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kpOJdX",
                        "isStatic": true,
                        "lastClassName": "c16",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.6s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kpOJdX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c16"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dxgOiQ",
                        "isStatic": true,
                        "lastClassName": "c17",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-dxgOiQ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c17"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ckVGcZ",
                        "isStatic": true,
                        "lastClassName": "c18",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-ckVGcZ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c18"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jKJlTe",
                        "isStatic": true,
                        "lastClassName": "c19",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jKJlTe",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c19"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eNQAEJ",
                        "isStatic": true,
                        "lastClassName": "c20",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.6s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-eNQAEJ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c20"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hMqMXs",
                        "isStatic": true,
                        "lastClassName": "c21",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.7s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-hMqMXs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c21"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kEYyzF",
                        "isStatic": true,
                        "lastClassName": "c22",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kEYyzF",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c22"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kkGfuU",
                        "isStatic": true,
                        "lastClassName": "c23",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kkGfuU",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c23"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iAyFgw",
                        "isStatic": true,
                        "lastClassName": "c24",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.6s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-iAyFgw",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c24"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hSdWYo",
                        "isStatic": true,
                        "lastClassName": "c25",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #b2d5e5;
",
                          "
  animation-delay: 0.7s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bZQynM",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-hSdWYo",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c25"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eHgmQL",
                        "isStatic": true,
                        "lastClassName": "c26",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #b2d5e5;
",
                          "
  animation-delay: 0.8s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bZQynM",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-eHgmQL",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c26"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</BlockchainLoader>
`;

exports[`BlockchainLoader should render correctly with size 1`] = `
.c0 {
  position: relative;
  width: 200px;
  height: 200px;
}

.c1 {
  width: 70%;
  height: 70%;
  -webkit-transform-origin: 85% 35%;
  -ms-transform-origin: 85% 35%;
  transform-origin: 85% 35%;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  border-radius: 10%;
  overflow: hidden;
}

.c2 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
}

.c3 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.c4 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.c5 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c6 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c7 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.c8 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.c9 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #153a62;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c10 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c11 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #799eb2;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c12 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.c13 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c14 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c15 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c16 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.6s;
  animation-delay: 0.6s;
}

.c17 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.c18 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c19 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c20 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.6s;
  animation-delay: 0.6s;
}

.c21 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #3558a8;
  -webkit-animation-delay: 0.7s;
  animation-delay: 0.7s;
}

.c22 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c23 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c24 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #10ade4;
  -webkit-animation-delay: 0.6s;
  animation-delay: 0.6s;
}

.c25 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #b2d5e5;
  -webkit-animation-delay: 0.7s;
  animation-delay: 0.7s;
}

.c26 {
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  -webkit-animation: ijAREv 3s infinite ease-in-out;
  animation: ijAREv 3s infinite ease-in-out;
  background-color: #b2d5e5;
  -webkit-animation-delay: 0.8s;
  animation-delay: 0.8s;
}

<BlockchainLoader
  size="200px"
>
  <styled.div
    size="200px"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  position: relative;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="200px"
    >
      <div
        className="c0"
        size="200px"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  width: 70%;
  height: 70%;
  transform-origin: 85% 35%;
  transform: rotate(-45deg);
  border-radius: 10%;
  overflow: hidden;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c2"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": true,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.1s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c3"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iwsKbI",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.2s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-iwsKbI",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c4"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gZMcBi",
                        "isStatic": true,
                        "lastClassName": "c5",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-gZMcBi",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c5"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gqjmRU",
                        "isStatic": true,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-gqjmRU",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-VigVT",
                        "isStatic": true,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.1s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-VigVT",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c7"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": true,
                        "lastClassName": "c8",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.2s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c8"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjdhpX",
                        "isStatic": true,
                        "lastClassName": "c9",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #153a62;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bxivhb",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fjdhpX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c9"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzJRlG",
                        "isStatic": true,
                        "lastClassName": "c10",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jzJRlG",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c10"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-cSHVUG",
                        "isStatic": true,
                        "lastClassName": "c11",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #799eb2;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-ifAKCX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-cSHVUG",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c11"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kAzzGY",
                        "isStatic": true,
                        "lastClassName": "c12",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.2s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kAzzGY",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c12"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-chPdSV",
                        "isStatic": true,
                        "lastClassName": "c13",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-chPdSV",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c13"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kgoBCf",
                        "isStatic": true,
                        "lastClassName": "c14",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kgoBCf",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c14"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kGXeez",
                        "isStatic": true,
                        "lastClassName": "c15",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kGXeez",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c15"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kpOJdX",
                        "isStatic": true,
                        "lastClassName": "c16",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.6s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kpOJdX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c16"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dxgOiQ",
                        "isStatic": true,
                        "lastClassName": "c17",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.3s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-dxgOiQ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c17"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ckVGcZ",
                        "isStatic": true,
                        "lastClassName": "c18",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-ckVGcZ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c18"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jKJlTe",
                        "isStatic": true,
                        "lastClassName": "c19",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jKJlTe",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c19"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eNQAEJ",
                        "isStatic": true,
                        "lastClassName": "c20",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.6s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-eNQAEJ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c20"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hMqMXs",
                        "isStatic": true,
                        "lastClassName": "c21",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #3558a8;
",
                          "
  animation-delay: 0.7s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-EHOje",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-hMqMXs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c21"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kEYyzF",
                        "isStatic": true,
                        "lastClassName": "c22",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.4s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kEYyzF",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c22"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kkGfuU",
                        "isStatic": true,
                        "lastClassName": "c23",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.5s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kkGfuU",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c23"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iAyFgw",
                        "isStatic": true,
                        "lastClassName": "c24",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #10ade4;
",
                          "
  animation-delay: 0.6s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-gzVnrw",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-iAyFgw",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c24"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hSdWYo",
                        "isStatic": true,
                        "lastClassName": "c25",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #b2d5e5;
",
                          "
  animation-delay: 0.7s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bZQynM",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-hSdWYo",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c25"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
              <Styled(Styled(styled.div))>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eHgmQL",
                        "isStatic": true,
                        "lastClassName": "c26",
                        "rules": Array [
                          "
  display: inline-block;
  width: 20%;
  height: 20%;
  float: left;
  border: 0;
  animation: ",
                          Keyframes {
                            "id": "sc-keyframes-ijAREv",
                            "inject": [Function],
                            "name": "ijAREv",
                            "rules": Array [
                              "@-webkit-keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                              "@keyframes ijAREv{0%,50%,100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1);}25%{-webkit-transform:scale3d(0,0,1);-ms-transform:scale3d(0,0,1);transform:scale3d(0,0,1);}}",
                            ],
                            "toString": [Function],
                          },
                          " 3s infinite ease-in-out;
",
                          "
  background-color: #b2d5e5;
",
                          "
  animation-delay: 0.8s;
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                        "sc-bZQynM",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-eHgmQL",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c26"
                  />
                </StyledComponent>
              </Styled(Styled(styled.div))>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</BlockchainLoader>
`;
