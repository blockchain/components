// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabMenu should render correctly 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  min-height: 3rem;
  border-bottom: 0.125rem solid #EEF2F5;
  box-sizing: border-box;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: space-between;
  -webkit-box-align: space-between;
  -ms-flex-align: space-between;
  align-items: space-between;
  width: 100%;
  min-height: 100%;
}

@media (max-width:48rem) {
  .c1 > .disabled {
    display: none;
  }
}

@media (min-width:48rem) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

<TabMenu
  height="3rem"
  toggled={false}
  width="100%"
>
  <styled.div
    height="3rem"
    width="100%"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: ",
              [Function],
              ";
  min-height: ",
              [Function],
              ";
  border-bottom: 0.125rem solid ",
              [Function],
              ";
  box-sizing: border-box;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="3rem"
      width="100%"
    >
      <div
        className="c0"
        height="3rem"
        width="100%"
      >
        <styled.div
          toggled={false}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: space-between;
  width: 100%;
  min-height: 100%;

  @media (max-width: ",
                    [Function],
                    ") {
    & > .disabled {
      display: ",
                    [Function],
                    ";
    }
  }

  @media (min-width: ",
                    [Function],
                    ") {
    flex-direction: row;
    align-items: center;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            toggled={false}
          >
            <div
              className="c1"
            >
              MyTabMenu
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</TabMenu>
`;

exports[`TabMenu should render correctly with height 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  min-height: 200px;
  border-bottom: 0.125rem solid #EEF2F5;
  box-sizing: border-box;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: space-between;
  -webkit-box-align: space-between;
  -ms-flex-align: space-between;
  align-items: space-between;
  width: 100%;
  min-height: 100%;
}

@media (max-width:48rem) {
  .c1 > .disabled {
    display: none;
  }
}

@media (min-width:48rem) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

<TabMenu
  height="200px"
  toggled={false}
  width="100%"
>
  <styled.div
    height="200px"
    width="100%"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: ",
              [Function],
              ";
  min-height: ",
              [Function],
              ";
  border-bottom: 0.125rem solid ",
              [Function],
              ";
  box-sizing: border-box;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="200px"
      width="100%"
    >
      <div
        className="c0"
        height="200px"
        width="100%"
      >
        <styled.div
          toggled={false}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: space-between;
  width: 100%;
  min-height: 100%;

  @media (max-width: ",
                    [Function],
                    ") {
    & > .disabled {
      display: ",
                    [Function],
                    ";
    }
  }

  @media (min-width: ",
                    [Function],
                    ") {
    flex-direction: row;
    align-items: center;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            toggled={false}
          >
            <div
              className="c1"
            >
              MyTabMenu
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</TabMenu>
`;

exports[`TabMenu should render correctly with toggled 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  min-height: 3rem;
  border-bottom: 0.125rem solid #EEF2F5;
  box-sizing: border-box;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: space-between;
  -webkit-box-align: space-between;
  -ms-flex-align: space-between;
  align-items: space-between;
  width: 100%;
  min-height: 100%;
}

@media (max-width:48rem) {
  .c1 > .disabled {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}

@media (min-width:48rem) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

<TabMenu
  height="3rem"
  toggled={true}
  width="100%"
>
  <styled.div
    height="3rem"
    width="100%"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: ",
              [Function],
              ";
  min-height: ",
              [Function],
              ";
  border-bottom: 0.125rem solid ",
              [Function],
              ";
  box-sizing: border-box;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="3rem"
      width="100%"
    >
      <div
        className="c0"
        height="3rem"
        width="100%"
      >
        <styled.div
          toggled={true}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: space-between;
  width: 100%;
  min-height: 100%;

  @media (max-width: ",
                    [Function],
                    ") {
    & > .disabled {
      display: ",
                    [Function],
                    ";
    }
  }

  @media (min-width: ",
                    [Function],
                    ") {
    flex-direction: row;
    align-items: center;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            toggled={true}
          >
            <div
              className="c1"
            >
              MyTabMenu
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</TabMenu>
`;

exports[`TabMenu should render correctly with width 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 50%;
  min-height: 3rem;
  border-bottom: 0.125rem solid #EEF2F5;
  box-sizing: border-box;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: space-between;
  -webkit-box-align: space-between;
  -ms-flex-align: space-between;
  align-items: space-between;
  width: 100%;
  min-height: 100%;
}

@media (max-width:48rem) {
  .c1 > .disabled {
    display: none;
  }
}

@media (min-width:48rem) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

<TabMenu
  height="3rem"
  toggled={false}
  width="50%"
>
  <styled.div
    height="3rem"
    width="50%"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: ",
              [Function],
              ";
  min-height: ",
              [Function],
              ";
  border-bottom: 0.125rem solid ",
              [Function],
              ";
  box-sizing: border-box;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="3rem"
      width="50%"
    >
      <div
        className="c0"
        height="3rem"
        width="50%"
      >
        <styled.div
          toggled={false}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: space-between;
  width: 100%;
  min-height: 100%;

  @media (max-width: ",
                    [Function],
                    ") {
    & > .disabled {
      display: ",
                    [Function],
                    ";
    }
  }

  @media (min-width: ",
                    [Function],
                    ") {
    flex-direction: row;
    align-items: center;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            toggled={false}
          >
            <div
              className="c1"
            >
              MyTabMenu
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</TabMenu>
`;
