// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea should render correctly 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c0:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c0:active:not(:disabled),
.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c0::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    forwardRef={null}
    height="100px"
    width="100%"
  >
    <styled.textarea
      disabled={false}
      e2e="defaultTextArea"
      height="100px"
      width="100%"
    >
      <StyledComponent
        disabled={false}
        e2e="defaultTextArea"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: block;
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  border-width: 1px;
  border-color: ",
                [Function],
                ";
  border-style: solid;
  border-radius: ",
                [Function],
                ";
  background-color: ",
                [Function],
                ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                [Function],
                ";
    border-color: ",
                [Function],
                ";
    background: ",
                [Function],
                ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                [Function],
                ";
  }

  &::placeholder {
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
  }
",
              ],
            },
            "displayName": "styled.textarea",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": "textarea",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="100px"
        width="100%"
      >
        <textarea
          className="c0"
          data-e2e="defaultTextArea"
          disabled={false}
          height="100px"
          width="100%"
        />
      </StyledComponent>
    </styled.textarea>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with disabled 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c0:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c0:active:not(:disabled),
.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c0::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  disabled={true}
>
  <TextArea
    disabled={true}
    e2e="defaultTextArea"
    forwardRef={null}
    height="100px"
    width="100%"
  >
    <styled.textarea
      disabled={true}
      e2e="defaultTextArea"
      height="100px"
      width="100%"
    >
      <StyledComponent
        disabled={true}
        e2e="defaultTextArea"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: block;
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  border-width: 1px;
  border-color: ",
                [Function],
                ";
  border-style: solid;
  border-radius: ",
                [Function],
                ";
  background-color: ",
                [Function],
                ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                [Function],
                ";
    border-color: ",
                [Function],
                ";
    background: ",
                [Function],
                ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                [Function],
                ";
  }

  &::placeholder {
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
  }
",
              ],
            },
            "displayName": "styled.textarea",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": "textarea",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="100px"
        width="100%"
      >
        <textarea
          className="c0"
          data-e2e="defaultTextArea"
          disabled={true}
          height="100px"
          width="100%"
        />
      </StyledComponent>
    </styled.textarea>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with e2e 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c0:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c0:active:not(:disabled),
.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c0::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  e2e="E2ELabel"
>
  <TextArea
    disabled={false}
    e2e="E2ELabel"
    forwardRef={null}
    height="100px"
    width="100%"
  >
    <styled.textarea
      disabled={false}
      e2e="E2ELabel"
      height="100px"
      width="100%"
    >
      <StyledComponent
        disabled={false}
        e2e="E2ELabel"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: block;
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  border-width: 1px;
  border-color: ",
                [Function],
                ";
  border-style: solid;
  border-radius: ",
                [Function],
                ";
  background-color: ",
                [Function],
                ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                [Function],
                ";
    border-color: ",
                [Function],
                ";
    background: ",
                [Function],
                ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                [Function],
                ";
  }

  &::placeholder {
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
  }
",
              ],
            },
            "displayName": "styled.textarea",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": "textarea",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="100px"
        width="100%"
      >
        <textarea
          className="c0"
          data-e2e="E2ELabel"
          disabled={false}
          height="100px"
          width="100%"
        />
      </StyledComponent>
    </styled.textarea>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with error="error" 1`] = `
.c1 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #F36331;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c2 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #F36331;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px transparent;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  error="error"
>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    error="error"
    forwardRef={null}
    height="100px"
    width="100%"
  >
    <styled.div
      width="100%"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-iwsKbI",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: flex;
  flex-direction: column;
  width: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-iwsKbI",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        width="100%"
      >
        <div
          className="c0"
          width="100%"
        >
          <styled.label
            disabled={false}
            error={true}
          >
            <StyledComponent
              disabled={false}
              error={true}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dnqmqq",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  font-family: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  padding-bottom: 0.5rem;
  color: ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.label",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-dnqmqq",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <label
                className="c1"
                disabled={false}
              >
                error
              </label>
            </StyledComponent>
          </styled.label>
          <styled.textarea
            disabled={false}
            e2e="defaultTextArea"
            error="error"
            height="100px"
            width="100%"
          >
            <StyledComponent
              disabled={false}
              e2e="defaultTextArea"
              error="error"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gZMcBi",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  display: block;
  width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-width: 1px;
  border-color: ",
                      [Function],
                      ";
  border-style: solid;
  border-radius: ",
                      [Function],
                      ";
  background-color: ",
                      [Function],
                      ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                      [Function],
                      ";
    border-color: ",
                      [Function],
                      ";
    background: ",
                      [Function],
                      ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                      [Function],
                      ";
  }

  &::placeholder {
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.textarea",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gZMcBi",
                  "target": "textarea",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              height="100px"
              width="100%"
            >
              <textarea
                className="c2"
                data-e2e="defaultTextArea"
                disabled={false}
                height="100px"
                width="100%"
              />
            </StyledComponent>
          </styled.textarea>
        </div>
      </StyledComponent>
    </styled.div>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with height 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 200px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c0:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c0:active:not(:disabled),
.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c0::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  height="200px"
>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    forwardRef={null}
    height="200px"
    width="100%"
  >
    <styled.textarea
      disabled={false}
      e2e="defaultTextArea"
      height="200px"
      width="100%"
    >
      <StyledComponent
        disabled={false}
        e2e="defaultTextArea"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: block;
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  border-width: 1px;
  border-color: ",
                [Function],
                ";
  border-style: solid;
  border-radius: ",
                [Function],
                ";
  background-color: ",
                [Function],
                ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                [Function],
                ";
    border-color: ",
                [Function],
                ";
    background: ",
                [Function],
                ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                [Function],
                ";
  }

  &::placeholder {
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
  }
",
              ],
            },
            "displayName": "styled.textarea",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": "textarea",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="200px"
        width="100%"
      >
        <textarea
          className="c0"
          data-e2e="defaultTextArea"
          disabled={false}
          height="200px"
          width="100%"
        />
      </StyledComponent>
    </styled.textarea>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with label="label" 1`] = `
.c1 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #757679;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c2 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  label="label"
>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    forwardRef={null}
    height="100px"
    label="label"
    width="100%"
  >
    <styled.div
      width="100%"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-iwsKbI",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: flex;
  flex-direction: column;
  width: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-iwsKbI",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        width="100%"
      >
        <div
          className="c0"
          width="100%"
        >
          <styled.label
            disabled={false}
            error={false}
          >
            <StyledComponent
              disabled={false}
              error={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dnqmqq",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  font-family: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  padding-bottom: 0.5rem;
  color: ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.label",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-dnqmqq",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <label
                className="c1"
                disabled={false}
              >
                label
              </label>
            </StyledComponent>
          </styled.label>
          <styled.textarea
            disabled={false}
            e2e="defaultTextArea"
            height="100px"
            label="label"
            width="100%"
          >
            <StyledComponent
              disabled={false}
              e2e="defaultTextArea"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gZMcBi",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  display: block;
  width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-width: 1px;
  border-color: ",
                      [Function],
                      ";
  border-style: solid;
  border-radius: ",
                      [Function],
                      ";
  background-color: ",
                      [Function],
                      ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                      [Function],
                      ";
    border-color: ",
                      [Function],
                      ";
    background: ",
                      [Function],
                      ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                      [Function],
                      ";
  }

  &::placeholder {
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.textarea",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gZMcBi",
                  "target": "textarea",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              height="100px"
              label="label"
              width="100%"
            >
              <textarea
                className="c2"
                data-e2e="defaultTextArea"
                disabled={false}
                height="100px"
                label="label"
                width="100%"
              />
            </StyledComponent>
          </styled.textarea>
        </div>
      </StyledComponent>
    </styled.div>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with label="label" and error="error" 1`] = `
.c1 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #F36331;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c2 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #F36331;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px transparent;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  error="error"
  label="label"
>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    error="error"
    forwardRef={null}
    height="100px"
    label="label"
    width="100%"
  >
    <styled.div
      width="100%"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-iwsKbI",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: flex;
  flex-direction: column;
  width: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-iwsKbI",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        width="100%"
      >
        <div
          className="c0"
          width="100%"
        >
          <styled.label
            disabled={false}
            error={true}
          >
            <StyledComponent
              disabled={false}
              error={true}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dnqmqq",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  font-family: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  padding-bottom: 0.5rem;
  color: ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.label",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-dnqmqq",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <label
                className="c1"
                disabled={false}
              >
                label - error
              </label>
            </StyledComponent>
          </styled.label>
          <styled.textarea
            disabled={false}
            e2e="defaultTextArea"
            error="error"
            height="100px"
            label="label"
            width="100%"
          >
            <StyledComponent
              disabled={false}
              e2e="defaultTextArea"
              error="error"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gZMcBi",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  display: block;
  width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-width: 1px;
  border-color: ",
                      [Function],
                      ";
  border-style: solid;
  border-radius: ",
                      [Function],
                      ";
  background-color: ",
                      [Function],
                      ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                      [Function],
                      ";
    border-color: ",
                      [Function],
                      ";
    background: ",
                      [Function],
                      ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                      [Function],
                      ";
  }

  &::placeholder {
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.textarea",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gZMcBi",
                  "target": "textarea",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              height="100px"
              label="label"
              width="100%"
            >
              <textarea
                className="c2"
                data-e2e="defaultTextArea"
                disabled={false}
                height="100px"
                label="label"
                width="100%"
              />
            </StyledComponent>
          </styled.textarea>
        </div>
      </StyledComponent>
    </styled.div>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with name 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c0:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c0:active:not(:disabled),
.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c0::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  name="mytextarea"
>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    forwardRef={null}
    height="100px"
    name="mytextarea"
    width="100%"
  >
    <styled.textarea
      disabled={false}
      e2e="defaultTextArea"
      height="100px"
      name="mytextarea"
      width="100%"
    >
      <StyledComponent
        disabled={false}
        e2e="defaultTextArea"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: block;
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  border-width: 1px;
  border-color: ",
                [Function],
                ";
  border-style: solid;
  border-radius: ",
                [Function],
                ";
  background-color: ",
                [Function],
                ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                [Function],
                ";
    border-color: ",
                [Function],
                ";
    background: ",
                [Function],
                ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                [Function],
                ";
  }

  &::placeholder {
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
  }
",
              ],
            },
            "displayName": "styled.textarea",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": "textarea",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="100px"
        name="mytextarea"
        width="100%"
      >
        <textarea
          className="c0"
          data-e2e="defaultTextArea"
          disabled={false}
          height="100px"
          name="mytextarea"
          width="100%"
        />
      </StyledComponent>
    </styled.textarea>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with value 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c0:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c0:active:not(:disabled),
.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c0::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  onChange={[Function]}
  value="Hello dear friend"
>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    forwardRef={null}
    height="100px"
    onChange={[Function]}
    value="Hello dear friend"
    width="100%"
  >
    <styled.textarea
      disabled={false}
      e2e="defaultTextArea"
      height="100px"
      onChange={[Function]}
      value="Hello dear friend"
      width="100%"
    >
      <StyledComponent
        disabled={false}
        e2e="defaultTextArea"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: block;
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  border-width: 1px;
  border-color: ",
                [Function],
                ";
  border-style: solid;
  border-radius: ",
                [Function],
                ";
  background-color: ",
                [Function],
                ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                [Function],
                ";
    border-color: ",
                [Function],
                ";
    background: ",
                [Function],
                ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                [Function],
                ";
  }

  &::placeholder {
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
  }
",
              ],
            },
            "displayName": "styled.textarea",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": "textarea",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="100px"
        onChange={[Function]}
        value="Hello dear friend"
        width="100%"
      >
        <textarea
          className="c0"
          data-e2e="defaultTextArea"
          disabled={false}
          height="100px"
          onChange={[Function]}
          value="Hello dear friend"
          width="100%"
        />
      </StyledComponent>
    </styled.textarea>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;

exports[`TextArea should render correctly with width 1`] = `
.c0 {
  display: block;
  width: 200px;
  height: 100px;
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c0:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c0:active:not(:disabled),
.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c0::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

<ForwardRef(TextAreaWithRef)
  width="200px"
>
  <TextArea
    disabled={false}
    e2e="defaultTextArea"
    forwardRef={null}
    height="100px"
    width="200px"
  >
    <styled.textarea
      disabled={false}
      e2e="defaultTextArea"
      height="100px"
      width="200px"
    >
      <StyledComponent
        disabled={false}
        e2e="defaultTextArea"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: block;
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  padding: 0.7rem 1rem;
  box-sizing: border-box;
  font-family: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  border-width: 1px;
  border-color: ",
                [Function],
                ";
  border-style: solid;
  border-radius: ",
                [Function],
                ";
  background-color: ",
                [Function],
                ";
  outline-width: 0;
  user-select: text;
  resize: none;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                [Function],
                ";
    border-color: ",
                [Function],
                ";
    background: ",
                [Function],
                ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                [Function],
                ";
  }

  &::placeholder {
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
  }
",
              ],
            },
            "displayName": "styled.textarea",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": "textarea",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="100px"
        width="200px"
      >
        <textarea
          className="c0"
          data-e2e="defaultTextArea"
          disabled={false}
          height="100px"
          width="200px"
        />
      </StyledComponent>
    </styled.textarea>
  </TextArea>
</ForwardRef(TextAreaWithRef)>
`;
