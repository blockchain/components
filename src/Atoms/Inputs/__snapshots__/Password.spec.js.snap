// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Password should render correctly 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c2 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c4 {
  fill: #545456;
  cursor: pointer;
}

.c4:hover {
  fill: #757679;
}

.c3 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c3:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.input
                disabled={false}
                e2e="defaultInput"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="password"
                  width="100%"
                >
                  <input
                    className="c2"
                    data-e2e="defaultInput"
                    disabled={false}
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c3"
                    onClick={[Function]}
                  >
                    <FarEye
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEye)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cqOjgt",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEye)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cqOjgt",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEye
                            className="c4"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c4"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M569.354 231.631C512.97 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-102.556 0-192.091-54.701-240-136 44.157-74.933 123.677-127.27 216.162-135.007C273.958 131.078 280 144.83 280 160c0 30.928-25.072 56-56 56s-56-25.072-56-56l.001-.042C157.794 179.043 152 200.844 152 224c0 75.111 60.889 136 136 136s136-60.889 136-136c0-31.031-10.4-59.629-27.895-82.515C451.704 164.638 498.009 205.106 528 256c-47.908 81.299-137.444 136-240 136z"
                              />
                            </svg>
                          </SvgFarEye>
                        </StyledComponent>
                      </Styled(SvgFarEye)>
                    </FarEye>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with disabled 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c2 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={true}
  e2e="defaultInput"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={true}
    e2e="defaultInput"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={true}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={true}
        e2e="defaultInput"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.input
                disabled={true}
                e2e="defaultInput"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={true}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="password"
                  width="100%"
                >
                  <input
                    className="c2"
                    data-e2e="defaultInput"
                    disabled={true}
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with error="error" 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c3 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #F36331;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c3:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c3:active:not(:disabled),
.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 1px transparent;
}

.c3::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #F36331;
}

.c5 {
  fill: #545456;
  cursor: pointer;
}

.c5:hover {
  fill: #757679;
}

.c4 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c4:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  error="error"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    error="error"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      error="error"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        error="error"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.label
                disabled={false}
                error={true}
              >
                <StyledComponent
                  disabled={false}
                  error={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  padding-bottom: 0.5rem;
  color: ",
                          [Function],
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.label",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "label",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <label
                    className="c2"
                    disabled={false}
                  >
                    error
                  </label>
                </StyledComponent>
              </styled.label>
              <styled.input
                disabled={false}
                e2e="defaultInput"
                error="error"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  error="error"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="password"
                  width="100%"
                >
                  <input
                    className="c3"
                    data-e2e="defaultInput"
                    disabled={false}
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c4"
                    onClick={[Function]}
                  >
                    <FarEye
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEye)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cqOjgt",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEye)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cqOjgt",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEye
                            className="c5"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c5"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M569.354 231.631C512.97 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-102.556 0-192.091-54.701-240-136 44.157-74.933 123.677-127.27 216.162-135.007C273.958 131.078 280 144.83 280 160c0 30.928-25.072 56-56 56s-56-25.072-56-56l.001-.042C157.794 179.043 152 200.844 152 224c0 75.111 60.889 136 136 136s136-60.889 136-136c0-31.031-10.4-59.629-27.895-82.515C451.704 164.638 498.009 205.106 528 256c-47.908 81.299-137.444 136-240 136z"
                              />
                            </svg>
                          </SvgFarEye>
                        </StyledComponent>
                      </Styled(SvgFarEye)>
                    </FarEye>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with label="label" 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c3 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c3:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c3:active:not(:disabled),
.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c3::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #757679;
}

.c5 {
  fill: #545456;
  cursor: pointer;
}

.c5:hover {
  fill: #757679;
}

.c4 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c4:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  label="label"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    label="label"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      label="label"
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        label="label"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.label
                disabled={false}
                error={false}
              >
                <StyledComponent
                  disabled={false}
                  error={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  padding-bottom: 0.5rem;
  color: ",
                          [Function],
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.label",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "label",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <label
                    className="c2"
                    disabled={false}
                  >
                    label
                  </label>
                </StyledComponent>
              </styled.label>
              <styled.input
                disabled={false}
                e2e="defaultInput"
                label="label"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  label="label"
                  type="password"
                  width="100%"
                >
                  <input
                    className="c3"
                    data-e2e="defaultInput"
                    disabled={false}
                    label="label"
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c4"
                    onClick={[Function]}
                  >
                    <FarEye
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEye)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cqOjgt",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEye)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cqOjgt",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEye
                            className="c5"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c5"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M569.354 231.631C512.97 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-102.556 0-192.091-54.701-240-136 44.157-74.933 123.677-127.27 216.162-135.007C273.958 131.078 280 144.83 280 160c0 30.928-25.072 56-56 56s-56-25.072-56-56l.001-.042C157.794 179.043 152 200.844 152 224c0 75.111 60.889 136 136 136s136-60.889 136-136c0-31.031-10.4-59.629-27.895-82.515C451.704 164.638 498.009 205.106 528 256c-47.908 81.299-137.444 136-240 136z"
                              />
                            </svg>
                          </SvgFarEye>
                        </StyledComponent>
                      </Styled(SvgFarEye)>
                    </FarEye>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with label="label" and disabled 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c3 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c3:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c3:active:not(:disabled),
.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c3::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #757679;
  cursor: not-allowed;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={true}
  e2e="defaultInput"
  label="label"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={true}
    e2e="defaultInput"
    label="label"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={true}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      label="label"
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={true}
        e2e="defaultInput"
        label="label"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.label
                disabled={true}
                error={false}
              >
                <StyledComponent
                  disabled={true}
                  error={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  padding-bottom: 0.5rem;
  color: ",
                          [Function],
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.label",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "label",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <label
                    className="c2"
                    disabled={true}
                  >
                    label
                  </label>
                </StyledComponent>
              </styled.label>
              <styled.input
                disabled={true}
                e2e="defaultInput"
                label="label"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={true}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  label="label"
                  type="password"
                  width="100%"
                >
                  <input
                    className="c3"
                    data-e2e="defaultInput"
                    disabled={true}
                    label="label"
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with label="label" and error="error" 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c3 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #F36331;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c3:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c3:active:not(:disabled),
.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 1px transparent;
}

.c3::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c3::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #F36331;
}

.c5 {
  fill: #545456;
  cursor: pointer;
}

.c5:hover {
  fill: #757679;
}

.c4 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c4:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  error="error"
  label="label"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    error="error"
    label="label"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      error="error"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      label="label"
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        error="error"
        label="label"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.label
                disabled={false}
                error={true}
              >
                <StyledComponent
                  disabled={false}
                  error={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  padding-bottom: 0.5rem;
  color: ",
                          [Function],
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.label",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "label",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <label
                    className="c2"
                    disabled={false}
                  >
                    label - error
                  </label>
                </StyledComponent>
              </styled.label>
              <styled.input
                disabled={false}
                e2e="defaultInput"
                error="error"
                label="label"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  error="error"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  label="label"
                  type="password"
                  width="100%"
                >
                  <input
                    className="c3"
                    data-e2e="defaultInput"
                    disabled={false}
                    label="label"
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c4"
                    onClick={[Function]}
                  >
                    <FarEye
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEye)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cqOjgt",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEye)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cqOjgt",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEye
                            className="c5"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c5"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M569.354 231.631C512.97 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-102.556 0-192.091-54.701-240-136 44.157-74.933 123.677-127.27 216.162-135.007C273.958 131.078 280 144.83 280 160c0 30.928-25.072 56-56 56s-56-25.072-56-56l.001-.042C157.794 179.043 152 200.844 152 224c0 75.111 60.889 136 136 136s136-60.889 136-136c0-31.031-10.4-59.629-27.895-82.515C451.704 164.638 498.009 205.106 528 256c-47.908 81.299-137.444 136-240 136z"
                              />
                            </svg>
                          </SvgFarEye>
                        </StyledComponent>
                      </Styled(SvgFarEye)>
                    </FarEye>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with switching its type 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c2 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c4 {
  fill: #545456;
  cursor: pointer;
}

.c4:hover {
  fill: #757679;
}

.c3 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c3:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    renderSuffix={[Function]}
    type="text"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      renderSuffix={[Function]}
      type="text"
      width="100%"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        renderSuffix={[Function]}
        type="text"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.input
                disabled={false}
                e2e="defaultInput"
                type="text"
                width="100%"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="text"
                  width="100%"
                >
                  <input
                    className="c2"
                    data-e2e="defaultInput"
                    disabled={false}
                    type="text"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c3"
                    onClick={[Function]}
                  >
                    <FarEyeSlash
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEyeSlash)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-dmXgXv",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEyeSlash)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-dmXgXv",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEyeSlash
                            className="c4"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c4"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M272.702 359.139c-80.483-9.011-136.212-86.886-116.93-167.042l116.93 167.042zM288 392c-102.556 0-192.092-54.701-240-136 21.755-36.917 52.1-68.342 88.344-91.658l-27.541-39.343C67.001 152.234 31.921 188.741 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.004 376.006 168.14 440 288 440a332.89 332.89 0 0 0 39.648-2.367l-32.021-45.744A284.16 284.16 0 0 1 288 392zm281.354-111.631c-33.232 56.394-83.421 101.742-143.554 129.492l48.116 68.74c3.801 5.429 2.48 12.912-2.949 16.712L450.23 509.83c-5.429 3.801-12.912 2.48-16.712-2.949L102.084 33.399c-3.801-5.429-2.48-12.912 2.949-16.712L125.77 2.17c5.429-3.801 12.912-2.48 16.712 2.949l55.526 79.325C226.612 76.343 256.808 72 288 72c119.86 0 224.996 63.994 281.354 159.631a48.002 48.002 0 0 1 0 48.738zM528 256c-44.157-74.933-123.677-127.27-216.162-135.007C302.042 131.078 296 144.83 296 160c0 30.928 25.072 56 56 56s56-25.072 56-56l-.001-.042c30.632 57.277 16.739 130.26-36.928 171.719l26.695 38.135C452.626 346.551 498.308 306.386 528 256z"
                              />
                            </svg>
                          </SvgFarEyeSlash>
                        </StyledComponent>
                      </Styled(SvgFarEyeSlash)>
                    </FarEyeSlash>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with switching its type 2`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c2 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c4 {
  fill: #545456;
  cursor: pointer;
}

.c4:hover {
  fill: #757679;
}

.c3 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c3:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.input
                disabled={false}
                e2e="defaultInput"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="password"
                  width="100%"
                >
                  <input
                    className="c2"
                    data-e2e="defaultInput"
                    disabled={false}
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c3"
                    onClick={[Function]}
                  >
                    <FarEye
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEye)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cqOjgt",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEye)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cqOjgt",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEye
                            className="c4"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c4"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M569.354 231.631C512.97 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-102.556 0-192.091-54.701-240-136 44.157-74.933 123.677-127.27 216.162-135.007C273.958 131.078 280 144.83 280 160c0 30.928-25.072 56-56 56s-56-25.072-56-56l.001-.042C157.794 179.043 152 200.844 152 224c0 75.111 60.889 136 136 136s136-60.889 136-136c0-31.031-10.4-59.629-27.895-82.515C451.704 164.638 498.009 205.106 528 256c-47.908 81.299-137.444 136-240 136z"
                              />
                            </svg>
                          </SvgFarEye>
                        </StyledComponent>
                      </Styled(SvgFarEye)>
                    </FarEye>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with type 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.c2 {
  display: block;
  height: 2.7rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c4 {
  fill: #545456;
  cursor: pointer;
}

.c4:hover {
  fill: #757679;
}

.c3 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c3:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  type="password"
  width="100%"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    renderSuffix={[Function]}
    type="password"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      renderSuffix={[Function]}
      type="password"
      width="100%"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        renderSuffix={[Function]}
        type="password"
        width="100%"
      >
        <styled.div
          className="c0"
          width="100%"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="100%"
          >
            <div
              className="c0 c1"
              width="100%"
            >
              <styled.input
                disabled={false}
                e2e="defaultInput"
                type="password"
                width="100%"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="password"
                  width="100%"
                >
                  <input
                    className="c2"
                    data-e2e="defaultInput"
                    disabled={false}
                    type="password"
                    width="100%"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c3"
                    onClick={[Function]}
                  >
                    <FarEye
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEye)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cqOjgt",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEye)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cqOjgt",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEye
                            className="c4"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c4"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M569.354 231.631C512.97 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-102.556 0-192.091-54.701-240-136 44.157-74.933 123.677-127.27 216.162-135.007C273.958 131.078 280 144.83 280 160c0 30.928-25.072 56-56 56s-56-25.072-56-56l.001-.042C157.794 179.043 152 200.844 152 224c0 75.111 60.889 136 136 136s136-60.889 136-136c0-31.031-10.4-59.629-27.895-82.515C451.704 164.638 498.009 205.106 528 256c-47.908 81.299-137.444 136-240 136z"
                              />
                            </svg>
                          </SvgFarEye>
                        </StyledComponent>
                      </Styled(SvgFarEye)>
                    </FarEye>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;

exports[`Password should render correctly with width 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 200px;
  position: relative;
}

.c2 {
  display: block;
  height: 2.7rem;
  width: 200px;
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  color: #545456;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  background-color: #FFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  -webkit-transition: box-shadow 0.25s ease-out;
  transition: box-shadow 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

.c2::-webkit-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::-moz-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2:-ms-input-placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c2::placeholder {
  color: #999B9E;
  font-size: 0.875rem;
}

.c4 {
  fill: #545456;
  cursor: pointer;
}

.c4:hover {
  fill: #757679;
}

.c3 {
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.625rem;
  font-weight: 600;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c3:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 input {
  padding-right: 3rem;
}

<Password
  disabled={false}
  e2e="defaultInput"
  type="password"
  width="200px"
>
  <Styled(Input)
    disabled={false}
    e2e="defaultInput"
    renderSuffix={[Function]}
    type="password"
    width="200px"
  >
    <StyledComponent
      disabled={false}
      e2e="defaultInput"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bhxjyQ",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  input {
    padding-right: 3rem;
  }
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bhxjyQ",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      renderSuffix={[Function]}
      type="password"
      width="200px"
    >
      <Input
        className="c0"
        disabled={false}
        e2e="defaultInput"
        renderSuffix={[Function]}
        type="password"
        width="200px"
      >
        <styled.div
          className="c0"
          width="200px"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: ",
                    [Function],
                    ";
  position: relative;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            width="200px"
          >
            <div
              className="c0 c1"
              width="200px"
            >
              <styled.input
                disabled={false}
                e2e="defaultInput"
                type="password"
                width="200px"
              >
                <StyledComponent
                  disabled={false}
                  e2e="defaultInput"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: block;
  height: 2.7rem;
  width: ",
                          [Function],
                          ";
  padding: 0 1rem;
  box-sizing: border-box;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-width: 1px;
  border-color: ",
                          [Function],
                          ";
  border-style: solid;
  border-radius: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  transition: box-shadow 0.25s ease-out;

  &:disabled {
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
    background: ",
                          [Function],
                          ";
    cursor: not-allowed;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    box-shadow: 0 0 0 1px
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="password"
                  width="200px"
                >
                  <input
                    className="c2"
                    data-e2e="defaultInput"
                    disabled={false}
                    type="password"
                    width="200px"
                  />
                </StyledComponent>
              </styled.input>
              <styled.span
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjoeMy",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  position: absolute;
  right: 1rem;
  bottom: 0.5rem;
  font-family: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: 600;
  user-select: none;

  &:hover {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjoeMy",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <span
                    className="c3"
                    onClick={[Function]}
                  >
                    <FarEye
                      selectable={true}
                      size="20px"
                    >
                      <Styled(SvgFarEye)
                        height="20px"
                        selectable={1}
                        width="20px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cqOjgt",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "
    ",
                                  "
  fill: ",
                                  [Function],
                                  ";
  cursor: ",
                                  [Function],
                                  ";

  &:hover {
    fill: ",
                                  [Function],
                                  ";
  }
",
                                  ";
  ",
                                ],
                              },
                              "displayName": "Styled(SvgFarEye)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cqOjgt",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height="20px"
                          selectable={1}
                          width="20px"
                        >
                          <SvgFarEye
                            className="c4"
                            height="20px"
                            selectable={1}
                            width="20px"
                          >
                            <svg
                              className="c4"
                              height="20px"
                              selectable={1}
                              viewBox="0 0 576 512"
                              width="20px"
                            >
                              <path
                                d="M569.354 231.631C512.97 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-102.556 0-192.091-54.701-240-136 44.157-74.933 123.677-127.27 216.162-135.007C273.958 131.078 280 144.83 280 160c0 30.928-25.072 56-56 56s-56-25.072-56-56l.001-.042C157.794 179.043 152 200.844 152 224c0 75.111 60.889 136 136 136s136-60.889 136-136c0-31.031-10.4-59.629-27.895-82.515C451.704 164.638 498.009 205.106 528 256c-47.908 81.299-137.444 136-240 136z"
                              />
                            </svg>
                          </SvgFarEye>
                        </StyledComponent>
                      </Styled(SvgFarEye)>
                    </FarEye>
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </Input>
    </StyledComponent>
  </Styled(Input)>
</Password>
`;
