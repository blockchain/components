// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TogglerItem should render correctly 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0.2rem 0.5rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  font-weight: 500;
  color: #98A1B2;
  background-color: #F0F2F7;
  cursor: pointer;
  text-transform: uppercase;
}

<TogglerItem
  e2e="defaultTogglerItem"
  selected={false}
>
  <styled.div
    e2e="defaultTogglerItem"
    selected={false}
  >
    <StyledComponent
      e2e="defaultTogglerItem"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 0.2rem 0.5rem;
  box-sizing: border-box;
  font-family: ",
              [Function],
              ";
  font-size: ",
              [Function],
              ";
  font-weight: 500;
  color: ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
  cursor: pointer;
  text-transform: uppercase;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      selected={false}
    >
      <div
        className="c0"
        data-e2e="defaultTogglerItem"
        selected={false}
      >
        TogglerItem
      </div>
    </StyledComponent>
  </styled.div>
</TogglerItem>
`;

exports[`TogglerItem should render correctly with selected 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0.2rem 0.5rem;
  box-sizing: border-box;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  font-weight: 500;
  color: #FFF;
  background-color: #0C6CF2;
  cursor: pointer;
  text-transform: uppercase;
}

<TogglerItem
  e2e="defaultTogglerItem"
  selected={true}
>
  <styled.div
    e2e="defaultTogglerItem"
    selected={true}
  >
    <StyledComponent
      e2e="defaultTogglerItem"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 0.2rem 0.5rem;
  box-sizing: border-box;
  font-family: ",
              [Function],
              ";
  font-size: ",
              [Function],
              ";
  font-weight: 500;
  color: ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
  cursor: pointer;
  text-transform: uppercase;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      selected={true}
    >
      <div
        className="c0"
        data-e2e="defaultTogglerItem"
        selected={true}
      >
        TogglerItem
      </div>
    </StyledComponent>
  </styled.div>
</TogglerItem>
`;
