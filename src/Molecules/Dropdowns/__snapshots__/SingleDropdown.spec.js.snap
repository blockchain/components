// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SingleDropdown should render correctly 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c1 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c1:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c1:active:not(:disabled),
.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

<SingleDropdown
  capitalize={false}
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  onChange={[MockFunction]}
  uppercase={false}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.select
        capitalize={false}
        italic={false}
        onChange={[MockFunction]}
        uppercase={false}
      >
        <select
          className="c1"
          onChange={[MockFunction]}
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with capitalize 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c1 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c1:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c1:active:not(:disabled),
.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

<SingleDropdown
  capitalize={true}
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  onChange={[MockFunction]}
  uppercase={false}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.select
        capitalize={true}
        italic={false}
        onChange={[MockFunction]}
        uppercase={false}
      >
        <select
          className="c1"
          onChange={[MockFunction]}
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with error="error" 1`] = `
.c1 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #F36331;
}

.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c2 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #F36331;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px transparent;
}

<SingleDropdown
  capitalize={false}
  error="error"
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  uppercase={false}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.label
        error={true}
      >
        <label
          className="c1"
        >
          error
        </label>
      </styled.label>
      <styled.select
        capitalize={false}
        error="error"
        italic={false}
        uppercase={false}
      >
        <select
          className="c2"
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with italic 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c1 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: italic;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c1:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c1:active:not(:disabled),
.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

<SingleDropdown
  capitalize={false}
  italic={true}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  onChange={[MockFunction]}
  uppercase={false}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.select
        capitalize={false}
        italic={true}
        onChange={[MockFunction]}
        uppercase={false}
      >
        <select
          className="c1"
          onChange={[MockFunction]}
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with label="label" 1`] = `
.c1 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #757679;
}

.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c2 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

<SingleDropdown
  capitalize={false}
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  label="label"
  uppercase={false}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.label
        error={false}
      >
        <label
          className="c1"
        >
          label
        </label>
      </styled.label>
      <styled.select
        capitalize={false}
        italic={false}
        label="label"
        uppercase={false}
      >
        <select
          className="c2"
          label="label"
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with label="label" and error="error" 1`] = `
.c1 {
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 0.875rem;
  padding-bottom: 0.5rem;
  color: #F36331;
}

.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c2 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #F36331;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c2:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c2:active:not(:disabled),
.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 1px transparent;
}

<SingleDropdown
  capitalize={false}
  error="error"
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  label="label"
  uppercase={false}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.label
        error={true}
      >
        <label
          className="c1"
        >
          label - error
        </label>
      </styled.label>
      <styled.select
        capitalize={false}
        error="error"
        italic={false}
        label="label"
        uppercase={false}
      >
        <select
          className="c2"
          label="label"
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with size 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c1 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c1:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c1:active:not(:disabled),
.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

<SingleDropdown
  capitalize={false}
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  onChange={[MockFunction]}
  size="32px"
  uppercase={false}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.select
        capitalize={false}
        italic={false}
        onChange={[MockFunction]}
        size="32px"
        uppercase={false}
      >
        <select
          className="c1"
          onChange={[MockFunction]}
          size="32px"
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with uppercase 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c1 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c1:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c1:active:not(:disabled),
.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

<SingleDropdown
  capitalize={false}
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  onChange={[MockFunction]}
  uppercase={true}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.select
        capitalize={false}
        italic={false}
        onChange={[MockFunction]}
        uppercase={true}
      >
        <select
          className="c1"
          onChange={[MockFunction]}
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;

exports[`SingleDropdown should render correctly with weight 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.c0::after {
  content: '';
  position: absolute;
  right: 1rem;
  bottom: 1.15rem;
  width: 0;
  height: 0;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
  border-top: 0.4rem solid #545456;
  pointer-events: none;
}

.c1 {
  width: 100%;
  height: 2.7rem;
  padding: 0 2.4rem 0 1rem;
  color: #545456;
  background-color: #FFF;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  font-weight: 500;
  font-size: 1rem;
  font-style: normal;
  border-width: 1px;
  border-color: #CCC;
  border-style: solid;
  border-radius: 0.25rem;
  cursor: pointer;
  outline: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}

.c1:disabled {
  color: #545456;
  border-color: #CCC;
  background: #F8F8F8;
  cursor: not-allowed;
}

.c1:active:not(:disabled),
.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 1px #10ADE4;
}

<SingleDropdown
  capitalize={false}
  italic={false}
  items={
    Array [
      Object {
        "text": "Item1",
        "value": 1,
      },
      Object {
        "text": "Item2",
        "value": 2,
      },
      Object {
        "text": "Item3",
        "value": 3,
      },
      Object {
        "text": "Item4",
        "value": 4,
      },
      Object {
        "text": "Item5",
        "value": 5,
      },
      Object {
        "text": "Item6",
        "value": 6,
      },
      Object {
        "text": "Item7",
        "value": 7,
      },
      Object {
        "text": "Item8",
        "value": 8,
      },
      Object {
        "text": "Item9",
        "value": 9,
      },
    ]
  }
  onChange={[MockFunction]}
  uppercase={false}
  weight={500}
  width="100%"
>
  <styled.div
    width="100%"
  >
    <div
      className="c0"
      width="100%"
    >
      <styled.select
        capitalize={false}
        italic={false}
        onChange={[MockFunction]}
        uppercase={false}
        weight={500}
      >
        <select
          className="c1"
          onChange={[MockFunction]}
        >
          <option
            key="1"
            value={1}
          >
            Item1
          </option>
          <option
            key="2"
            value={2}
          >
            Item2
          </option>
          <option
            key="3"
            value={3}
          >
            Item3
          </option>
          <option
            key="4"
            value={4}
          >
            Item4
          </option>
          <option
            key="5"
            value={5}
          >
            Item5
          </option>
          <option
            key="6"
            value={6}
          >
            Item6
          </option>
          <option
            key="7"
            value={7}
          >
            Item7
          </option>
          <option
            key="8"
            value={8}
          >
            Item8
          </option>
          <option
            key="9"
            value={9}
          >
            Item9
          </option>
        </select>
      </styled.select>
    </div>
  </styled.div>
</SingleDropdown>
`;
