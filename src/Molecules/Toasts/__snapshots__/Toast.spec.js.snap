// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toast should render correctly 1`] = `
.c4 {
  fill: #545456;
  cursor: pointer;
}

.c4:hover {
  fill: #757679;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 1.025rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  background-color: #FFF;
  border-radius: 0.25rem;
  color: #000;
  box-shadow: rgba(67,90,111,0.416) 0 0 1px, rgba(67,90,111,0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: 600;
}

.c3 {
  padding-left: 1.025rem;
}

<Toast
  e2e="defaultToast"
  title="Hey! This is a default toast."
  type="default"
>
  <styled.div
    e2e="defaultToast"
  >
    <StyledComponent
      e2e="defaultToast"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iChnts",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  padding: ",
              "1.025rem",
              ";
  font-family: ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
  border-radius: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  box-shadow: rgba(67, 90, 111, 0.416) 0 0 1px,
    rgba(67, 90, 111, 0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iChnts",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-e2e="defaultToast"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bkiSek",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex: 1 1 0%;
  flex-direction: column;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bkiSek",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hArCzk",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: flex;
  font-weight: 600;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-hArCzk",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c2"
                  >
                    Hey! This is a default toast.
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eSnlgF",
                  "isStatic": true,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  padding-left: ",
                    "1.025rem",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eSnlgF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            >
              <FasTimes
                selectable={true}
                size="16px"
              >
                <Styled(SvgFasTimes)
                  height="16px"
                  selectable={1}
                  width="16px"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-jGVZLC",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "
    ",
                            "
  fill: ",
                            [Function],
                            ";
  cursor: ",
                            [Function],
                            ";

  &:hover {
    fill: ",
                            [Function],
                            ";
  }
",
                            ";
  ",
                          ],
                        },
                        "displayName": "Styled(SvgFasTimes)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-jGVZLC",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      }
                    }
                    forwardedRef={null}
                    height="16px"
                    selectable={1}
                    width="16px"
                  >
                    <SvgFasTimes
                      className="c4"
                      height="16px"
                      selectable={1}
                      width="16px"
                    >
                      <svg
                        className="c4"
                        height="16px"
                        selectable={1}
                        viewBox="0 0 352 512"
                        width="16px"
                      >
                        <path
                          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        />
                      </svg>
                    </SvgFasTimes>
                  </StyledComponent>
                </Styled(SvgFasTimes)>
              </FasTimes>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Toast>
`;

exports[`Toast should render correctly with description 1`] = `
.c5 {
  fill: #545456;
  cursor: pointer;
}

.c5:hover {
  fill: #757679;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 1.025rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  background-color: #FFF;
  border-radius: 0.25rem;
  color: #000;
  box-shadow: rgba(67,90,111,0.416) 0 0 1px, rgba(67,90,111,0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: 600;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-top: 0.325rem;
}

.c4 {
  padding-left: 1.025rem;
}

<Toast
  description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  e2e="defaultToast"
  title="This is a default toast."
  type="default"
>
  <styled.div
    e2e="defaultToast"
  >
    <StyledComponent
      e2e="defaultToast"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iChnts",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  padding: ",
              "1.025rem",
              ";
  font-family: ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
  border-radius: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  box-shadow: rgba(67, 90, 111, 0.416) 0 0 1px,
    rgba(67, 90, 111, 0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iChnts",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-e2e="defaultToast"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bkiSek",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex: 1 1 0%;
  flex-direction: column;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bkiSek",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hArCzk",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  display: flex;
  font-weight: 600;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-hArCzk",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c2"
                  >
                    This is a default toast.
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dPrnFZ",
                        "isStatic": true,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  display: flex;
  padding-top: 0.325rem;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dPrnFZ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c3"
                  >
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eSnlgF",
                  "isStatic": true,
                  "lastClassName": "c4",
                  "rules": Array [
                    "
  padding-left: ",
                    "1.025rem",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eSnlgF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
            >
              <FasTimes
                selectable={true}
                size="16px"
              >
                <Styled(SvgFasTimes)
                  height="16px"
                  selectable={1}
                  width="16px"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-jGVZLC",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "
    ",
                            "
  fill: ",
                            [Function],
                            ";
  cursor: ",
                            [Function],
                            ";

  &:hover {
    fill: ",
                            [Function],
                            ";
  }
",
                            ";
  ",
                          ],
                        },
                        "displayName": "Styled(SvgFasTimes)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-jGVZLC",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      }
                    }
                    forwardedRef={null}
                    height="16px"
                    selectable={1}
                    width="16px"
                  >
                    <SvgFasTimes
                      className="c5"
                      height="16px"
                      selectable={1}
                      width="16px"
                    >
                      <svg
                        className="c5"
                        height="16px"
                        selectable={1}
                        viewBox="0 0 352 512"
                        width="16px"
                      >
                        <path
                          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        />
                      </svg>
                    </SvgFasTimes>
                  </StyledComponent>
                </Styled(SvgFasTimes)>
              </FasTimes>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Toast>
`;

exports[`Toast should render correctly with type=danger 1`] = `
.c2 {
  fill: #545456;
  cursor: default;
}

.c2:hover {
  fill: #545456;
}

.c7 {
  fill: #545456;
  cursor: pointer;
}

.c7:hover {
  fill: #757679;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 1.025rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  background-color: #FFF;
  border-radius: 0.25rem;
  color: #000;
  box-shadow: rgba(67,90,111,0.416) 0 0 1px, rgba(67,90,111,0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: 600;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-top: 0.325rem;
}

.c6 {
  padding-left: 1.025rem;
}

.c1 {
  margin-right: 1.025rem;
  margin-top: 2px;
  fill: #F7C653;
  margin-right: 1.025rem;
  margin-top: 2px;
  fill: #F36331;
}

.c1:hover {
  fill: #F7C653;
}

.c1:hover {
  fill: #F36331;
}

<Toast
  description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  e2e="defaultToast"
  title="This is a default toast."
  type="danger"
>
  <styled.div
    e2e="defaultToast"
  >
    <StyledComponent
      e2e="defaultToast"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iChnts",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  padding: ",
              "1.025rem",
              ";
  font-family: ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
  border-radius: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  box-shadow: rgba(67, 90, 111, 0.416) 0 0 1px,
    rgba(67, 90, 111, 0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iChnts",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-e2e="defaultToast"
      >
        <Styled(Styled(FasExclamationCircle))
          size="16px"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-itMjNJ",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  ",
                    "
  margin-right: ",
                    "1.025rem",
                    ";
  margin-top: 2px;
",
                    ";
  fill: ",
                    [Function],
                    ";

  &:hover {
    fill: ",
                    [Function],
                    ";
  }
",
                    "
  ",
                    "
  margin-right: ",
                    "1.025rem",
                    ";
  margin-top: 2px;
",
                    ";
  fill: ",
                    [Function],
                    ";

  &:hover {
    fill: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Styled(FasExclamationCircle))",
                "foldedComponentIds": Array [
                  "sc-fhFWCS",
                ],
                "render": [Function],
                "styledComponentId": "sc-itMjNJ",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size="16px"
          >
            <FasExclamationCircle
              className="c1"
              selectable={false}
              size="16px"
            >
              <Styled(SvgFasExclamationCircle)
                className="c1"
                height="16px"
                selectable={0}
                width="16px"
              >
                <StyledComponent
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fQJGqW",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
    ",
                          "
  fill: ",
                          [Function],
                          ";
  cursor: ",
                          [Function],
                          ";

  &:hover {
    fill: ",
                          [Function],
                          ";
  }
",
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(SvgFasExclamationCircle)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fQJGqW",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    }
                  }
                  forwardedRef={null}
                  height="16px"
                  selectable={0}
                  width="16px"
                >
                  <SvgFasExclamationCircle
                    className="c1 c2"
                    height="16px"
                    selectable={0}
                    width="16px"
                  >
                    <svg
                      className="c1 c2"
                      height="16px"
                      selectable={0}
                      viewBox="0 0 512 512"
                      width="16px"
                    >
                      <path
                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                      />
                    </svg>
                  </SvgFasExclamationCircle>
                </StyledComponent>
              </Styled(SvgFasExclamationCircle)>
            </FasExclamationCircle>
          </StyledComponent>
        </Styled(Styled(FasExclamationCircle))>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bkiSek",
                  "isStatic": true,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  display: flex;
  flex: 1 1 0%;
  flex-direction: column;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bkiSek",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hArCzk",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  display: flex;
  font-weight: 600;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-hArCzk",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c4"
                  >
                    This is a default toast.
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dPrnFZ",
                        "isStatic": true,
                        "lastClassName": "c5",
                        "rules": Array [
                          "
  display: flex;
  padding-top: 0.325rem;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dPrnFZ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c5"
                  >
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eSnlgF",
                  "isStatic": true,
                  "lastClassName": "c6",
                  "rules": Array [
                    "
  padding-left: ",
                    "1.025rem",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eSnlgF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c6"
            >
              <FasTimes
                selectable={true}
                size="16px"
              >
                <Styled(SvgFasTimes)
                  height="16px"
                  selectable={1}
                  width="16px"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-jGVZLC",
                          "isStatic": false,
                          "lastClassName": "c7",
                          "rules": Array [
                            "
    ",
                            "
  fill: ",
                            [Function],
                            ";
  cursor: ",
                            [Function],
                            ";

  &:hover {
    fill: ",
                            [Function],
                            ";
  }
",
                            ";
  ",
                          ],
                        },
                        "displayName": "Styled(SvgFasTimes)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-jGVZLC",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      }
                    }
                    forwardedRef={null}
                    height="16px"
                    selectable={1}
                    width="16px"
                  >
                    <SvgFasTimes
                      className="c7"
                      height="16px"
                      selectable={1}
                      width="16px"
                    >
                      <svg
                        className="c7"
                        height="16px"
                        selectable={1}
                        viewBox="0 0 352 512"
                        width="16px"
                      >
                        <path
                          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        />
                      </svg>
                    </SvgFasTimes>
                  </StyledComponent>
                </Styled(SvgFasTimes)>
              </FasTimes>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Toast>
`;

exports[`Toast should render correctly with type=success 1`] = `
.c2 {
  fill: #545456;
  cursor: default;
}

.c2:hover {
  fill: #545456;
}

.c7 {
  fill: #545456;
  cursor: pointer;
}

.c7:hover {
  fill: #757679;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 1.025rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  background-color: #FFF;
  border-radius: 0.25rem;
  color: #000;
  box-shadow: rgba(67,90,111,0.416) 0 0 1px, rgba(67,90,111,0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: 600;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-top: 0.325rem;
}

.c6 {
  padding-left: 1.025rem;
}

.c1 {
  margin-right: 1.025rem;
  margin-top: 2px;
  fill: #47B881;
}

.c1:hover {
  fill: #47B881;
}

<Toast
  description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  e2e="defaultToast"
  title="This is a default toast."
  type="success"
>
  <styled.div
    e2e="defaultToast"
  >
    <StyledComponent
      e2e="defaultToast"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iChnts",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  padding: ",
              "1.025rem",
              ";
  font-family: ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
  border-radius: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  box-shadow: rgba(67, 90, 111, 0.416) 0 0 1px,
    rgba(67, 90, 111, 0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iChnts",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-e2e="defaultToast"
      >
        <Styled(FasCheckCircle)
          size="16px"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gudSFl",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  ",
                    "
  margin-right: ",
                    "1.025rem",
                    ";
  margin-top: 2px;
",
                    ";
  fill: ",
                    [Function],
                    ";

  &:hover {
    fill: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(FasCheckCircle)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gudSFl",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size="16px"
          >
            <FasCheckCircle
              className="c1"
              selectable={false}
              size="16px"
            >
              <Styled(SvgFasCheckCircle)
                className="c1"
                height="16px"
                selectable={0}
                width="16px"
              >
                <StyledComponent
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eQubti",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
    ",
                          "
  fill: ",
                          [Function],
                          ";
  cursor: ",
                          [Function],
                          ";

  &:hover {
    fill: ",
                          [Function],
                          ";
  }
",
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(SvgFasCheckCircle)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-eQubti",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    }
                  }
                  forwardedRef={null}
                  height="16px"
                  selectable={0}
                  width="16px"
                >
                  <SvgFasCheckCircle
                    className="c1 c2"
                    height="16px"
                    selectable={0}
                    width="16px"
                  >
                    <svg
                      className="c1 c2"
                      height="16px"
                      selectable={0}
                      viewBox="0 0 512 512"
                      width="16px"
                    >
                      <path
                        d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                      />
                    </svg>
                  </SvgFasCheckCircle>
                </StyledComponent>
              </Styled(SvgFasCheckCircle)>
            </FasCheckCircle>
          </StyledComponent>
        </Styled(FasCheckCircle)>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bkiSek",
                  "isStatic": true,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  display: flex;
  flex: 1 1 0%;
  flex-direction: column;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bkiSek",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hArCzk",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  display: flex;
  font-weight: 600;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-hArCzk",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c4"
                  >
                    This is a default toast.
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dPrnFZ",
                        "isStatic": true,
                        "lastClassName": "c5",
                        "rules": Array [
                          "
  display: flex;
  padding-top: 0.325rem;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dPrnFZ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c5"
                  >
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eSnlgF",
                  "isStatic": true,
                  "lastClassName": "c6",
                  "rules": Array [
                    "
  padding-left: ",
                    "1.025rem",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eSnlgF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c6"
            >
              <FasTimes
                selectable={true}
                size="16px"
              >
                <Styled(SvgFasTimes)
                  height="16px"
                  selectable={1}
                  width="16px"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-jGVZLC",
                          "isStatic": false,
                          "lastClassName": "c7",
                          "rules": Array [
                            "
    ",
                            "
  fill: ",
                            [Function],
                            ";
  cursor: ",
                            [Function],
                            ";

  &:hover {
    fill: ",
                            [Function],
                            ";
  }
",
                            ";
  ",
                          ],
                        },
                        "displayName": "Styled(SvgFasTimes)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-jGVZLC",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      }
                    }
                    forwardedRef={null}
                    height="16px"
                    selectable={1}
                    width="16px"
                  >
                    <SvgFasTimes
                      className="c7"
                      height="16px"
                      selectable={1}
                      width="16px"
                    >
                      <svg
                        className="c7"
                        height="16px"
                        selectable={1}
                        viewBox="0 0 352 512"
                        width="16px"
                      >
                        <path
                          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        />
                      </svg>
                    </SvgFasTimes>
                  </StyledComponent>
                </Styled(SvgFasTimes)>
              </FasTimes>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Toast>
`;

exports[`Toast should render correctly with type=warning 1`] = `
.c2 {
  fill: #545456;
  cursor: default;
}

.c2:hover {
  fill: #545456;
}

.c7 {
  fill: #545456;
  cursor: pointer;
}

.c7:hover {
  fill: #757679;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 1.025rem;
  font-family: 'IBM Plex Sans','Helvetica Neue',Arial,sans-serif;
  background-color: #FFF;
  border-radius: 0.25rem;
  color: #000;
  box-shadow: rgba(67,90,111,0.416) 0 0 1px, rgba(67,90,111,0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: 600;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-top: 0.325rem;
}

.c6 {
  padding-left: 1.025rem;
}

.c1 {
  margin-right: 1.025rem;
  margin-top: 2px;
  fill: #F7C653;
}

.c1:hover {
  fill: #F7C653;
}

<Toast
  description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  e2e="defaultToast"
  title="This is a default toast."
  type="warning"
>
  <styled.div
    e2e="defaultToast"
  >
    <StyledComponent
      e2e="defaultToast"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iChnts",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  padding: ",
              "1.025rem",
              ";
  font-family: ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
  border-radius: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  box-shadow: rgba(67, 90, 111, 0.416) 0 0 1px,
    rgba(67, 90, 111, 0.3) 0 8px 10px -4px;
  min-width: 250px;
  max-width: 560px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iChnts",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-e2e="defaultToast"
      >
        <Styled(FasExclamationCircle)
          size="16px"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-fhFWCS",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  ",
                    "
  margin-right: ",
                    "1.025rem",
                    ";
  margin-top: 2px;
",
                    ";
  fill: ",
                    [Function],
                    ";

  &:hover {
    fill: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(FasExclamationCircle)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-fhFWCS",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size="16px"
          >
            <FasExclamationCircle
              className="c1"
              selectable={false}
              size="16px"
            >
              <Styled(SvgFasExclamationCircle)
                className="c1"
                height="16px"
                selectable={0}
                width="16px"
              >
                <StyledComponent
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fQJGqW",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
    ",
                          "
  fill: ",
                          [Function],
                          ";
  cursor: ",
                          [Function],
                          ";

  &:hover {
    fill: ",
                          [Function],
                          ";
  }
",
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(SvgFasExclamationCircle)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fQJGqW",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    }
                  }
                  forwardedRef={null}
                  height="16px"
                  selectable={0}
                  width="16px"
                >
                  <SvgFasExclamationCircle
                    className="c1 c2"
                    height="16px"
                    selectable={0}
                    width="16px"
                  >
                    <svg
                      className="c1 c2"
                      height="16px"
                      selectable={0}
                      viewBox="0 0 512 512"
                      width="16px"
                    >
                      <path
                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                      />
                    </svg>
                  </SvgFasExclamationCircle>
                </StyledComponent>
              </Styled(SvgFasExclamationCircle)>
            </FasExclamationCircle>
          </StyledComponent>
        </Styled(FasExclamationCircle)>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bkiSek",
                  "isStatic": true,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  display: flex;
  flex: 1 1 0%;
  flex-direction: column;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bkiSek",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hArCzk",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  display: flex;
  font-weight: 600;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-hArCzk",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c4"
                  >
                    This is a default toast.
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dPrnFZ",
                        "isStatic": true,
                        "lastClassName": "c5",
                        "rules": Array [
                          "
  display: flex;
  padding-top: 0.325rem;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dPrnFZ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c5"
                  >
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eSnlgF",
                  "isStatic": true,
                  "lastClassName": "c6",
                  "rules": Array [
                    "
  padding-left: ",
                    "1.025rem",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eSnlgF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c6"
            >
              <FasTimes
                selectable={true}
                size="16px"
              >
                <Styled(SvgFasTimes)
                  height="16px"
                  selectable={1}
                  width="16px"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-jGVZLC",
                          "isStatic": false,
                          "lastClassName": "c7",
                          "rules": Array [
                            "
    ",
                            "
  fill: ",
                            [Function],
                            ";
  cursor: ",
                            [Function],
                            ";

  &:hover {
    fill: ",
                            [Function],
                            ";
  }
",
                            ";
  ",
                          ],
                        },
                        "displayName": "Styled(SvgFasTimes)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-jGVZLC",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      }
                    }
                    forwardedRef={null}
                    height="16px"
                    selectable={1}
                    width="16px"
                  >
                    <SvgFasTimes
                      className="c7"
                      height="16px"
                      selectable={1}
                      width="16px"
                    >
                      <svg
                        className="c7"
                        height="16px"
                        selectable={1}
                        viewBox="0 0 352 512"
                        width="16px"
                      >
                        <path
                          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        />
                      </svg>
                    </SvgFasTimes>
                  </StyledComponent>
                </Styled(SvgFasTimes)>
              </FasTimes>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Toast>
`;
